# main.gd (–û–ë–ù–û–í–õ–ï–ù–û - –ª–æ–≥–∏, –∫–Ω–æ–ø–∫–∞ –¥–µ–Ω–µ–≥, –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫ –∫–≤–µ—Å—Ç–æ–≤, –ø—Ä–æ–∫–∞—á–∫–∞ –æ—Ç –¥–≤–∏–∂–µ–Ω–∏—è)
extends Node2D

# ===== –ö–û–ú–ü–û–ù–ï–ù–¢–´ =====
var game_initializer
var input_handler

# ===== –ú–ï–ù–ï–î–ñ–ï–†–´ =====
var map_manager
var ui_controller
var action_handler
var menu_manager
var clicker_system
var districts_menu_manager
var battle_manager
var grid_movement_manager

# ===== –°–ò–°–¢–ï–ú–´ (AUTOLOAD) =====
var items_db
var building_system
var player_stats
var quest_system
var random_events
var inventory_manager
var gang_manager
var save_manager
var districts_system
var simple_jobs
var hospital_system
var time_system
var log_system  # ‚úÖ –ù–û–í–û–ï: –°–∏—Å—Ç–µ–º–∞ –ª–æ–≥–æ–≤

# ===== –ò–ì–†–û–í–´–ï –°–ò–°–¢–ï–ú–´ =====
var grid_system
var movement_system

# ===== –°–û–°–¢–û–Ø–ù–ò–ï –ò–ì–†–´ =====
var current_location = null
var menu_open = false
var first_battle_started = false

# ===== –î–ê–ù–ù–´–ï –õ–û–ö–ê–¶–ò–ô =====
var locations = {
	"–û–ë–©–ï–ñ–ò–¢–ò–ï": {"position": Vector2(500, 200), "actions": ["–û—Ç–¥–æ—Ö–Ω—É—Ç—å", "–ü–æ–≥–æ–≤–æ—Ä–∏—Ç—å —Å –¥—Ä—É–≥–æ–º", "–í–∑—è—Ç—å –≤–µ—â–∏"], "grid_square": "6_2"},
	"–õ–ê–†–Å–ö": {"position": Vector2(200, 350), "actions": ["–ö—É–ø–∏—Ç—å –ø–∏–≤–æ (30—Ä)", "–ö—É–ø–∏—Ç—å —Å–∏–≥–∞—Ä–µ—Ç—ã (15—Ä)", "–ö—É–ø–∏—Ç—å –∫–µ–ø–∫—É (50—Ä)"], "grid_square": "2_4"},
	"–í–û–ö–ó–ê–õ": {"position": Vector2(100, 150), "actions": ["–ö—É–ø–∏—Ç—å –±–∏–ª–µ—Ç", "–í—Å—Ç—Ä–µ—Ç–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç", "–û—Å–º–æ—Ç—Ä–µ—Ç—å—Å—è"], "grid_square": "1_1"},
	"–ì–ê–†–ê–ñ": {"position": Vector2(550, 650), "actions": ["–ö—É–ø–∏—Ç—å –±–∏—Ç—É (100—Ä)", "–ü–æ–º–æ—á—å –º–µ—Ö–∞–Ω–∏–∫—É", "–í–∑—è—Ç—å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã"], "grid_square": "9_8"},
	"–†–´–ù–û–ö": {"position": Vector2(300, 850), "actions": ["–ö—É–ø–∏—Ç—å –∫–æ–∂–∞–Ω–∫—É (200—Ä)", "–ü—Ä–æ–¥–∞—Ç—å –≤–µ—â—å", "–£–∑–Ω–∞—Ç—å –Ω–æ–≤–æ—Å—Ç–∏"], "grid_square": "5_10"},
	"–ü–û–†–¢": {"position": Vector2(600, 450), "actions": ["–ö—É–ø–∏—Ç—å –ü–ú (500—Ä)", "–ö—É–ø–∏—Ç—å –æ—Ç–º—ã—á–∫—É (100—Ä)", "–£–π—Ç–∏"], "grid_square": "10_5"},
	"–£–õ–ò–¶–ê": {"position": Vector2(150, 1050), "actions": ["–ü—Ä–æ–≥—É–ª—è—Ç—å—Å—è", "–í—Å—Ç—Ä–µ—Ç–∏—Ç—å –∑–Ω–∞–∫–æ–º–æ–≥–æ", "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–æ–∫—Ä—É–≥"], "grid_square": "2_13"},
	"–ë–û–õ–¨–ù–ò–¶–ê": {"position": Vector2(400, 500), "actions": ["–õ–µ—á–∏—Ç—å—Å—è", "–ö—É–ø–∏—Ç—å –∞–ø—Ç–µ—á–∫—É (100—Ä)", "–£–π—Ç–∏"], "grid_square": "6_6"},
	"–§–°–ë": {"position": Vector2(350, 300), "actions": ["üí∞ –î–∞—Ç—å –≤–∑—è—Ç–∫—É", "üö™ –£–π—Ç–∏"], "grid_square": "5_3"},
	"–ë–ê–†": {"position": Vector2(420, 540), "actions": ["–û—Ç–¥–æ—Ö–Ω—É—Ç—å", "–ë—É—Ö–∞—Ç—å —Å –±–∞–Ω–¥–æ–π", "–£–π—Ç–∏"], "grid_square": "7_7"},
	"–ê–í–¢–û–°–ê–õ–û–ù": {"position": Vector2(180, 540), "actions": ["–í—ã–±–æ—Ä –º–∞—à–∏–Ω—ã", "–ü–æ—á–∏–Ω–∏—Ç—å –º–∞—à–∏–Ω—É", "–£–π—Ç–∏"], "grid_square": "3_7"}
}

# ===== –î–ê–ù–ù–´–ï –ò–ì–†–û–ö–ê =====
var player_data = {
	"balance": 150,
	"health": 100,
	"reputation": 0,
	"completed_quests": [],
	"equipment": {"helmet": null, "armor": null, "melee": null, "ranged": null, "gadget": null, "car": null},  # ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω —Å–ª–æ—Ç car
	"inventory": ["–ü–∞—á–∫–∞ —Å–∏–≥–∞—Ä–µ—Ç", "–ë—É–ª–∫–∞", "–ù–æ–∂"],
	"pockets": [null, null, null],
	"current_square": "6_2",
	"first_battle_completed": false,
	"car": null,
	"car_condition": 100.0,
	"car_equipped": false,  # ‚úÖ –ù–û–í–û–ï: –ù–∞–¥–µ—Ç–∞ –ª–∏ –º–∞—à–∏–Ω–∞
	"current_driver": null  # ‚úÖ –ù–û–í–û–ï: –ò–Ω–¥–µ–∫—Å –≤–æ–¥–∏—Ç–µ–ª—è –≤ gang_members
}

# ===== –î–ê–ù–ù–´–ï –ë–ê–ù–î–´ =====
var gang_members = [
	{
		"name": "–ì–ª–∞–≤–Ω—ã–π (—Ç—ã)",
		"health": 100,
		"strength": 10,
		"equipment": {"helmet": null, "armor": null, "melee": null, "ranged": null, "gadget": null, "car": null},  # ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω —Å–ª–æ—Ç car
		"inventory": [],
		"pockets": [null, null, null],
		"is_active": true
	}
]

func _ready():
	# –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
	game_initializer = preload("res://scripts/core/game_initializer.gd").new()
	input_handler = preload("res://scripts/core/input_handler.gd").new()
	
	# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
	game_initializer.load_autoload_systems(self)
	
	# ‚úÖ –ù–û–í–û–ï: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –ª–æ–≥–æ–≤
	log_system = get_node_or_null("/root/LogSystem")
	if log_system:
		setup_log_window()
		log_system.add_log("üéÆ –ò–≥—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å!", "event")
	
	game_initializer.setup_grid_and_movement(self)
	game_initializer.initialize_managers(self)
	game_initializer.setup_game_systems(self)
	game_initializer.connect_signals(self)
	
	# ‚úÖ –ù–û–í–û–ï: –ü–æ–¥–∫–ª—é—á–∞–µ–º —Å–∏–≥–Ω–∞–ª –ø–æ–≤—ã—à–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è –∫ –ª–æ–≥–∞–º
	if player_stats and log_system:
		player_stats.stat_leveled_up.connect(_on_stat_leveled_up)
	
	show_intro_text()
	
	# ‚úÖ –ù–û–í–û–ï: –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –∫–≤–µ—Å—Ç—ã
	start_initial_quests()
	
	print("‚úÖ –ò–≥—Ä–∞ –≥–æ—Ç–æ–≤–∞! (–° –õ–û–ì–ê–ú–ò)")

# ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫–Ω–∞ –ª–æ–≥–æ–≤ (—Ç–µ–ø–µ—Ä—å —Ä–∞–±–æ—Ç–∞–µ—Ç!)
func setup_log_window():
	"""–°–æ–∑–¥–∞–µ—Ç –æ–∫–Ω–æ –ª–æ–≥–æ–≤ –≤–Ω–∏–∑—É —ç–∫—Ä–∞–Ω–∞"""
	print("üîß setup_log_window –≤—ã–∑–≤–∞–Ω–∞")
	
	# –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ –æ–∫–Ω–æ –µ—Å–ª–∏ –µ—Å—Ç—å
	var old_container = get_node_or_null("LogContainer")
	if old_container:
		print("   –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π LogContainer")
		old_container.queue_free()
		await get_tree().process_frame
	
	var log_container = CanvasLayer.new()
	log_container.name = "LogContainer"
	log_container.layer = 5
	add_child(log_container)
	print("   LogContainer —Å–æ–∑–¥–∞–Ω")
	
	# –§–æ–Ω –¥–ª—è –ª–æ–≥–æ–≤
	var log_bg = ColorRect.new()
	log_bg.size = Vector2(420, 230)
	log_bg.position = Vector2(290, 900)
	log_bg.color = Color(0.08, 0.08, 0.08, 0.95)
	log_bg.name = "LogBG"
	log_container.add_child(log_bg)
	
	# –ó–∞–≥–æ–ª–æ–≤–æ–∫
	var log_title = Label.new()
	log_title.text = "üìú –õ–û–ì–ò –°–û–ë–´–¢–ò–ô"
	log_title.position = Vector2(345, 905)
	log_title.add_theme_font_size_override("font_size", 16)
	log_title.add_theme_color_override("font_color", Color(1.0, 0.8, 0.2))
	log_title.name = "LogTitle"
	log_container.add_child(log_title)
	
	# –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Å–∫—Ä–æ–ª–ª–∞
	var log_scroll = ScrollContainer.new()
	log_scroll.custom_minimum_size = Vector2(410, 180)
	log_scroll.position = Vector2(295, 935)
	log_scroll.name = "LogScroll"
	log_scroll.vertical_scroll_mode = ScrollContainer.SCROLL_MODE_AUTO
	log_scroll.horizontal_scroll_mode = ScrollContainer.SCROLL_MODE_DISABLED
	log_container.add_child(log_scroll)
	
	# VBox –¥–ª—è –ª–æ–≥–æ–≤
	var log_vbox = VBoxContainer.new()
	log_vbox.name = "LogVBox"
	log_vbox.custom_minimum_size = Vector2(390, 0)
	log_scroll.add_child(log_vbox)
	print("   UI —Å–æ–∑–¥–∞–Ω")
	
	# ‚úÖ –ö–†–ò–¢–ò–ß–ù–û: –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤ —Å–∏—Å—Ç–µ–º—É –ª–æ–≥–æ–≤
	if log_system:
		print("   –ü–æ–¥–∫–ª—é—á–∞–µ–º –∫ LogSystem")
		log_system.set_display_node(log_scroll)
		
		# –î–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
		await get_tree().process_frame
		await get_tree().process_frame
		
		# –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
		log_system.add_log("‚úÖ –û–∫–Ω–æ –ª–æ–≥–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç!", "event")
		print("‚úÖ –û–∫–Ω–æ –ª–æ–≥–æ–≤ —Å–æ–∑–¥–∞–Ω–æ –∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–æ")
	else:
		print("‚ö†Ô∏è LogSystem –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")

# ‚úÖ –ù–û–í–û–ï: –ê–≤—Ç–æ–∑–∞–ø—É—Å–∫ –Ω–∞—á–∞–ª—å–Ω—ã—Ö –∫–≤–µ—Å—Ç–æ–≤
func start_initial_quests():
	"""–ó–∞–ø—É—Å–∫–∞–µ—Ç –Ω–∞—á–∞–ª—å–Ω—ã–µ –∫–≤–µ—Å—Ç—ã –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –∏–≥—Ä—ã"""
	if not quest_system:
		print("‚ö†Ô∏è QuestSystem –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
		return
	
	print("üìú –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –∫–≤–µ—Å—Ç—ã")
	
	# –ó–∞–ø—É—Å–∫–∞–µ–º –∫–≤–µ—Å—Ç—ã
	quest_system.start_quest("first_money")
	quest_system.start_quest("first_fight")
	quest_system.start_quest("visit_locations")
	
	if log_system:
		log_system.add_quest_log("üìã –ü–æ–ª—É—á–µ–Ω—ã –Ω–∞—á–∞–ª—å–Ω—ã–µ –∫–≤–µ—Å—Ç—ã")
	
	print("üìú –ù–∞—á–∞–ª—å–Ω—ã–µ –∫–≤–µ—Å—Ç—ã –∑–∞–ø—É—â–µ–Ω—ã")

# ‚úÖ –ù–û–í–û–ï: –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–≤—ã—à–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è –¥–ª—è –ª–æ–≥–æ–≤
func _on_stat_leveled_up(stat_name: String, new_level: int):
	if log_system:
		log_system.add_level_up_log("‚≠ê %s ‚Üí –£—Ä.%d" % [stat_name, new_level])
	show_level_up_message(stat_name, new_level)

# ===== –û–ë–†–ê–ë–û–¢–ö–ê –í–í–û–î–ê =====
func _unhandled_input(event):
	if input_handler.handle_input(event, self):
		get_viewport().set_input_as_handled()

# ===== –ú–ï–ù–Æ –õ–û–ö–ê–¶–ò–ô =====
func show_location_menu(location_name: String):
	current_location = location_name
	menu_open = true
	print("üè¢ –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é: " + location_name)
	
	# –õ–æ–≥–∏—Ä—É–µ–º –ø–æ—Å–µ—â–µ–Ω–∏–µ
	if log_system:
		log_system.add_event_log("üè¢ –ü–æ—Å–µ—â–µ–Ω–∏–µ: " + location_name)
	
	# ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –¢—Ä–∏–≥–≥–µ—Ä–∏–º —Å–ª—É—á–∞–π–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ
	if random_events:
		print("üé≤ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ")
		var event_happened = random_events.trigger_random_event(location_name, player_data, self)
		if event_happened:
			print("   ‚úÖ –°–æ–±—ã—Ç–∏–µ –ø—Ä–æ–∏–∑–æ—à–ª–æ!")
			if log_system:
				log_system.add_event_log("üé≤ –°–ª—É—á–∏–ª–æ—Å—å —Å–æ–±—ã—Ç–∏–µ!")
	
	var old_menu = get_node_or_null("BuildingMenu")
	if old_menu:
		old_menu.queue_free()
		await get_tree().process_frame
	
	var building_menu_script = load("res://scripts/ui/building_menu.gd")
	var building_menu = building_menu_script.new()
	building_menu.name = "BuildingMenu"
	add_child(building_menu)
	
	var actions = locations[location_name]["actions"]
	building_menu.setup(location_name, actions)
	
	building_menu.action_selected.connect(func(action_index):
		handle_location_action(action_index)
	)
	
	building_menu.menu_closed.connect(func():
		close_location_menu()
	)

func handle_location_action(action_index: int):
	if current_location == null:
		return
	
	print("üéØ –î–µ–π—Å—Ç–≤–∏–µ %d –≤ %s" % [action_index, current_location])
	
	action_handler.handle_location_action(current_location, action_index, self)
	
	# ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –î–æ–±–∞–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–∏
	if time_system:
		var time_cost = randi_range(5, 15)
		print("‚è∞ –î–æ–±–∞–≤–ª—è–µ–º %d –º–∏–Ω—É—Ç" % time_cost)
		time_system.add_minutes(time_cost)
		
		# ‚úÖ –ö–†–ò–¢–ò–ß–ù–û: –û–±–Ω–æ–≤–ª—è–µ–º UI –≤—Ä–µ–º–µ–Ω–∏
		call_deferred("update_time_ui")
		
		if log_system:
			log_system.add_movement_log("‚è∞ –ü—Ä–æ—à–ª–æ %d –º–∏–Ω" % time_cost)
	
	# –õ–æ–≥–∏—Ä—É–µ–º –¥–µ–π—Å—Ç–≤–∏–µ
	if log_system and current_location:
		var actions = locations[current_location]["actions"]
		if action_index < actions.size():
			log_system.add_event_log("üéØ " + actions[action_index])

func close_location_menu():
	var layer = get_node_or_null("BuildingMenu")
	if layer:
		layer.queue_free()
	menu_open = false
	current_location = null
	print("‚úÖ –ú–µ–Ω—é –ª–æ–∫–∞—Ü–∏–∏ –∑–∞–∫—Ä—ã—Ç–æ")

func on_location_clicked(location_name: String):
	show_location_menu(location_name)
	action_handler.trigger_location_events(location_name, self)

# ===== –ö–ù–û–ü–ö–ò –ù–ò–ñ–ù–ï–ô –ü–ê–ù–ï–õ–ò =====
func on_bottom_button_pressed(button_name: String):
	match button_name:
		"–ë–∞–Ω–¥–∞":
			if gang_manager:
				gang_manager.show_gang_menu(self, gang_members)
			elif menu_manager:
				menu_manager.show_gang_menu(self)
			else:
				show_message("‚ùå –°–∏—Å—Ç–µ–º–∞ –±–∞–Ω–¥—ã –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞!")
				print("‚ùå GangManager –∏ MenuManager –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")
		"–†–∞–π–æ–Ω—ã":
			districts_menu_manager.show_districts_menu(self)
		"–ö–≤–µ—Å—Ç—ã":
			menu_manager.show_quests_menu(self)
		"–ú–µ–Ω—é":
			show_main_menu_with_money_button()  # ‚úÖ –ù–û–í–û–ï: –° –∫–Ω–æ–ø–∫–æ–π –¥–µ–Ω–µ–≥

# ‚úÖ –ù–û–í–û–ï: –ú–µ–Ω—é —Å –∫–Ω–æ–ø–∫–æ–π –¥–µ–Ω–µ–≥
func show_main_menu_with_money_button():
	var menu_layer = CanvasLayer.new()
	menu_layer.name = "MainMenu"
	menu_layer.layer = 150
	add_child(menu_layer)
	
	# Overlay
	var overlay = ColorRect.new()
	overlay.size = Vector2(720, 1280)
	overlay.color = Color(0, 0, 0, 0.7)
	overlay.mouse_filter = Control.MOUSE_FILTER_STOP
	menu_layer.add_child(overlay)
	
	# –§–æ–Ω
	var bg = ColorRect.new()
	bg.size = Vector2(700, 900)
	bg.position = Vector2(10, 190)
	bg.color = Color(0.05, 0.05, 0.05, 0.95)
	menu_layer.add_child(bg)
	
	# –ó–∞–≥–æ–ª–æ–≤–æ–∫
	var title = Label.new()
	title.text = "‚öôÔ∏è –ú–ï–ù–Æ"
	title.position = Vector2(300, 210)
	title.add_theme_font_size_override("font_size", 28)
	title.add_theme_color_override("font_color", Color(1.0, 0.8, 0.2))
	menu_layer.add_child(title)
	
	var y_pos = 280
	
	# ‚úÖ –ù–û–í–û–ï: –ö–Ω–æ–ø–∫–∞ –¥–µ–Ω–µ–≥ (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
	var money_btn = Button.new()
	money_btn.text = "üí∞ –î–µ–Ω—å–≥–∏ (+10000) [–¢–ï–°–¢]"
	money_btn.custom_minimum_size = Vector2(680, 60)
	money_btn.position = Vector2(20, y_pos)
	money_btn.add_theme_font_size_override("font_size", 20)
	
	var style_money = StyleBoxFlat.new()
	style_money.bg_color = Color(0.2, 0.6, 0.2)
	money_btn.add_theme_stylebox_override("normal", style_money)
	
	money_btn.pressed.connect(func():
		player_data["balance"] += 10000
		update_ui()
		if log_system:
			log_system.add_money_log("üí∞ +10000 —Ä—É–±. (—Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º)")
		show_message("üí∞ –ü–æ–ª—É—á–µ–Ω–æ 10000 —Ä—É–±–ª–µ–π!")
	)
	menu_layer.add_child(money_btn)
	y_pos += 80
	
	# ‚úÖ –ö–ù–û–ü–ö–ê –¢–ï–°–¢–ê –ë–û–Ø
	var test_battle_btn = Button.new()
	test_battle_btn.text = "‚öîÔ∏è –¢–µ—Å—Ç –±–æ—è"
	test_battle_btn.custom_minimum_size = Vector2(680, 60)
	test_battle_btn.position = Vector2(20, y_pos)
	test_battle_btn.add_theme_font_size_override("font_size", 20)
	
	var style_battle = StyleBoxFlat.new()
	style_battle.bg_color = Color(0.7, 0.2, 0.2)
	test_battle_btn.add_theme_stylebox_override("normal", style_battle)
	
	test_battle_btn.pressed.connect(func():
		menu_layer.queue_free()
		_start_test_battle()
	)
	menu_layer.add_child(test_battle_btn)
	y_pos += 80
	
	# –û—Å—Ç–∞–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏...
	var stats_btn = Button.new()
	stats_btn.text = "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"
	stats_btn.custom_minimum_size = Vector2(680, 60)
	stats_btn.position = Vector2(20, y_pos)
	stats_btn.add_theme_font_size_override("font_size", 20)
	stats_btn.pressed.connect(func():
		if menu_manager:
			menu_layer.queue_free()
			menu_manager.show_stats_menu(self)
	)
	menu_layer.add_child(stats_btn)
	y_pos += 80
	
	# –ö–Ω–æ–ø–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
	var save_btn = Button.new()
	save_btn.text = "üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–≥—Ä—É"
	save_btn.custom_minimum_size = Vector2(680, 60)
	save_btn.position = Vector2(20, y_pos)
	save_btn.add_theme_font_size_override("font_size", 20)
	save_btn.pressed.connect(func():
		if save_manager:
			save_manager.save_game(self)
			show_message("üíæ –ò–≥—Ä–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞!")
			if log_system:
				log_system.add_event_log("üíæ –ò–≥—Ä–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞")
	)
	menu_layer.add_child(save_btn)
	y_pos += 80
	
	# –ö–Ω–æ–ø–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏
	var load_btn = Button.new()
	load_btn.text = "üìÇ –ó–∞–≥—Ä—É–∑–∏—Ç—å –∏–≥—Ä—É"
	load_btn.custom_minimum_size = Vector2(680, 60)
	load_btn.position = Vector2(20, y_pos)
	load_btn.add_theme_font_size_override("font_size", 20)
	load_btn.pressed.connect(func():
		if save_manager:
			save_manager.load_game(self)
			if log_system:
				log_system.add_event_log("üìÇ –ò–≥—Ä–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞")
	)
	menu_layer.add_child(load_btn)
	y_pos += 80
	
	# –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è
	var close_btn = Button.new()
	close_btn.text = "–ó–ê–ö–†–´–¢–¨"
	close_btn.custom_minimum_size = Vector2(680, 60)
	close_btn.position = Vector2(20, y_pos + 40)
	close_btn.add_theme_font_size_override("font_size", 20)
	
	var style_close = StyleBoxFlat.new()
	style_close.bg_color = Color(0.5, 0.1, 0.1)
	close_btn.add_theme_stylebox_override("normal", style_close)
	
	close_btn.pressed.connect(func():
		menu_layer.queue_free()
	)
	menu_layer.add_child(close_btn)

# ===== –û–ë–ù–û–í–õ–ï–ù–ò–ï UI =====
func update_ui():
	ui_controller.update_ui()
	clicker_system.player_data = player_data
	update_time_ui()

func update_time_ui():
	if not ui_controller or not time_system:
		return
	var ui_layer = ui_controller.get_ui_layer()
	var date_label = ui_layer.get_node_or_null("DateLabel")
	if date_label:
		date_label.text = time_system.get_date_time_string()

func show_message(text: String):
	ui_controller.show_message(text, self)

# ===== –°–û–ë–´–¢–ò–Ø –í–†–ï–ú–ï–ù–ò =====
func _on_time_changed(_hour: int, _minute: int):
	update_time_ui()

func _on_day_changed(_day: int, _month: int, _year: int):
	print("üìÖ –ù–æ–≤—ã–π –¥–µ–Ω—å: %d.%d.%d" % [_day, _month, _year])
	show_message("üìÖ –ù–æ–≤—ã–π –¥–µ–Ω—å!")
	if log_system:
		log_system.add_event_log("üìÖ –ù–∞—Å—Ç—É–ø–∏–ª –Ω–æ–≤—ã–π –¥–µ–Ω—å")
	if districts_system:
		districts_system.process_daily_income()
	update_time_ui()

func _on_time_of_day_changed(period: String):
	var messages = {
		"—É—Ç—Ä–æ": "üåÖ –ù–∞—Å—Ç—É–ø–∏–ª–æ —É—Ç—Ä–æ",
		"–¥–µ–Ω—å": "‚òÄÔ∏è –î–µ–Ω—å",
		"–≤–µ—á–µ—Ä": "üåÜ –ù–∞—Å—Ç—É–ø–∏–ª –≤–µ—á–µ—Ä",
		"–Ω–æ—á—å": "üåô –ù–æ—á—å"
	}
	if period in messages:
		show_message(messages[period])

# ===== –í–°–¢–£–ü–õ–ï–ù–ò–ï =====
func show_intro_text():
	var intro_layer = CanvasLayer.new()
	intro_layer.name = "IntroLayer"
	add_child(intro_layer)
	
	var label = Label.new()
	label.text = "–¢–≤–µ—Ä—å. –ù–∞—á–∞–ª–æ –ø—É—Ç–∏.\n02.03.1992, 10:00"
	label.position = Vector2(150, 500)
	label.add_theme_font_size_override("font_size", 32)
	label.add_theme_color_override("font_color", Color.WHITE)
	label.horizontal_alignment = HORIZONTAL_ALIGNMENT_CENTER
	intro_layer.add_child(label)
	
	await get_tree().create_timer(3.0).timeout
	intro_layer.queue_free()
	
	if not first_battle_started and not player_data.get("first_battle_completed", false):
		first_battle_started = true
		player_data["first_battle_completed"] = true
		
		await get_tree().create_timer(1.0).timeout
		show_message("‚ö†Ô∏è –û–ë–£–ß–ï–ù–ò–ï: –í—Å—Ç—Ä–µ—Ç–∏–ª—Å—è –≥–æ–ø–Ω–∏–∫!")
		await get_tree().create_timer(1.5).timeout
		
		if battle_manager:
			battle_manager.start_battle(self, "gopnik", false)

# ===== –£–†–û–í–ï–ù–¨ –•–ê–†–ê–ö–¢–ï–†–ò–°–¢–ò–ö =====
func show_level_up_message(stat_name: String, new_level: int):
	var level_up_layer = CanvasLayer.new()
	level_up_layer.name = "LevelUpLayer"
	add_child(level_up_layer)
	
	var bg = ColorRect.new()
	bg.size = Vector2(500, 200)
	bg.position = Vector2(110, 540)
	bg.color = Color(0.1, 0.3, 0.1, 0.95)
	level_up_layer.add_child(bg)
	
	var title = Label.new()
	title.text = "‚≠ê –ü–û–í–´–®–ï–ù–ò–ï –£–†–û–í–ù–Ø! ‚≠ê"
	title.position = Vector2(200, 560)
	title.add_theme_font_size_override("font_size", 26)
	title.add_theme_color_override("font_color", Color(1.0, 1.0, 0.3, 1.0))
	level_up_layer.add_child(title)
	
	var stat_label = Label.new()
	stat_label.text = stat_name + " ‚Üí " + str(new_level)
	stat_label.position = Vector2(280, 620)
	stat_label.add_theme_font_size_override("font_size", 32)
	stat_label.add_theme_color_override("font_color", Color(0.3, 1.0, 0.3, 1.0))
	level_up_layer.add_child(stat_label)
	
	var timer = Timer.new()
	timer.wait_time = 3.0
	timer.one_shot = true
	add_child(timer)
	timer.timeout.connect(func():
		if level_up_layer and is_instance_valid(level_up_layer):
			level_up_layer.queue_free()
		timer.queue_free()
	)
	timer.start()

# ===== –ö–í–ï–°–¢–´ =====
func on_quest_completed(quest_id: String):
	if not quest_system:
		return
	var reward = null
	if quest_system.available_quests.has(quest_id):
		reward = quest_system.available_quests[quest_id]["reward"]
	if reward:
		if reward.has("money"):
			player_data["balance"] += reward["money"]
		if reward.has("reputation"):
			player_data["reputation"] += reward["reputation"]
		var reward_text = "‚úÖ –ö–≤–µ—Å—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω!\n"
		if reward.has("money"):
			reward_text += "üí∞ +" + str(reward["money"]) + " —Ä—É–±.\n"
		if reward.has("reputation"):
			reward_text += "‚≠ê +" + str(reward["reputation"]) + " —Ä–µ–ø—É—Ç–∞—Ü–∏–∏"
		show_message(reward_text)
		
		# ‚úÖ –ù–û–í–û–ï: –õ–æ–≥–∏—Ä—É–µ–º –Ω–∞–≥—Ä–∞–¥—É –∑–∞ –∫–≤–µ—Å—Ç
		if log_system:
			var quest_info = quest_system.available_quests[quest_id]
			var log_msg = "‚úÖ –ö–≤–µ—Å—Ç: " + quest_info.get("title", "")
			if reward.has("money"):
				log_msg += " | üí∞ +" + str(reward["money"]) + "—Ä"
			if reward.has("reputation"):
				log_msg += " | ‚≠ê +" + str(reward["reputation"])
			log_system.add_quest_log(log_msg)
		
		update_ui()

# ===== –†–ê–ô–û–ù–´ =====
func on_district_captured(district_name: String, by_gang: String):
	districts_menu_manager.show_district_captured_notification(self, district_name, by_gang)

# ===== –ë–û–ô =====
func show_enemy_selection_menu():
	battle_manager.show_enemy_selection_menu(self)

func start_battle(enemy_type: String = "gopnik"):
	battle_manager.start_battle(self, enemy_type)

func show_districts_menu():
	districts_menu_manager.show_districts_menu(self)

# ===== –ó–ê–ì–†–£–ó–ö–ê –ò–ì–†–´ =====
func load_game_from_data(save_data: Dictionary):
	if save_data.is_empty():
		show_message("‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏!")
		return
	
	if save_data.has("player"):
		var player = save_data["player"]
		player_data["balance"] = player.get("balance", 0)
		player_data["health"] = player.get("health", 100)
		player_data["reputation"] = player.get("reputation", 0)
		player_data["completed_quests"] = player.get("completed_quests", [])
		player_data["equipment"] = player.get("equipment", {}).duplicate(true)
		player_data["inventory"] = player.get("inventory", []).duplicate(true)
		player_data["pockets"] = player.get("pockets", [null, null, null]).duplicate(true)
		player_data["first_battle_completed"] = player.get("first_battle_completed", true)
		player_data["car"] = player.get("car", null)
		player_data["car_condition"] = player.get("car_condition", 100.0)
		
		if player.has("current_square"):
			player_data["current_square"] = player["current_square"]
	
	if save_data.has("gang"):
		gang_members = save_data["gang"].duplicate(true)
		print("üìÇ –ó–∞–≥—Ä—É–∂–∞–µ–º –±–∞–Ω–¥—É: %d —á–ª–µ–Ω–æ–≤" % gang_members.size())
		
		for i in range(gang_members.size()):
			var member = gang_members[i]
			if not member.has("is_active"):
				member["is_active"] = (i == 0)
			if not member.has("hp"):
				member["hp"] = member.get("health", 100)
			if not member.has("max_hp"):
				member["max_hp"] = member.get("hp", 100)
			if not member.has("damage"):
				member["damage"] = member.get("strength", 10)
			if not member.has("defense"):
				member["defense"] = 0
			if not member.has("morale"):
				member["morale"] = 80
			if not member.has("accuracy"):
				member["accuracy"] = 0.65
			if not member.has("weapon"):
				member["weapon"] = "–ö—É–ª–∞–∫–∏"
			if not member.has("inventory"):
				member["inventory"] = []
			if not member.has("equipment"):
				member["equipment"] = {"helmet": null, "armor": null, "melee": null, "ranged": null, "gadget": null}
			if not member.has("pockets"):
				member["pockets"] = [null, null, null]
			
			print("  [%d] %s (active: %s, hp: %d)" % [
				i, 
				member.get("name", "???"), 
				member.get("is_active", false),
				member.get("hp", 100)
			])
	
	if save_manager:
		if save_data.has("quests"):
			save_manager.restore_quest_data(save_data["quests"])
		if save_data.has("districts"):
			save_manager.restore_districts_data(save_data["districts"])
	
	update_ui()
	show_message("‚úÖ –ò–≥—Ä–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞!")
	print("üìÇ –ó–∞–≥—Ä—É–∂–µ–Ω–æ - –ø–µ—Ä–≤—ã–π –±–æ–π: %s" % player_data["first_battle_completed"])

# ===== –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò =====

func get_current_transport_type() -> int:
	"""–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ç–∏–ø —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —ç–∫–∏–ø–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –º–∞—à–∏–Ω—ã"""
	if not player_data.get("car_equipped"):
		return movement_system.TransportType.WALK
	
	if not player_data.get("car"):
		return movement_system.TransportType.WALK
	
	if player_data.get("current_driver") == null:
		return movement_system.TransportType.WALK
	
	# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ ID –º–∞—à–∏–Ω—ã
	var car_id = player_data["car"]
	match car_id:
		"vaz_2106":
			return movement_system.TransportType.CAR_LEVEL1
		"volga_3110", "bmw_e34":
			return movement_system.TransportType.CAR_LEVEL2
		_:
			return movement_system.TransportType.WALK

func _start_test_battle():
	"""–ó–∞–ø—É—Å–∫–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–π –±–æ–π"""
	print("‚öîÔ∏è –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –±–æ—è")
	
	if not battle_manager:
		show_message("‚ùå –°–∏—Å—Ç–µ–º–∞ –±–æ—è –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞!")
		print("‚ùå battle_manager –Ω–µ –Ω–∞–π–¥–µ–Ω!")
		return
	
	# –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –≤—Ä–∞–≥–∞
	var test_enemy = {
		"name": "–¢–µ—Å—Ç–æ–≤—ã–π –≥–æ–ø–Ω–∏–∫",
		"hp": 50,
		"max_hp": 50,
		"damage": 15,
		"defense": 5,
		"accuracy": 0.7,
		"weapon": "–ë–∏—Ç–∞",
		"morale": 80
	}
	
	if log_system:
		log_system.add_combat_log("‚öîÔ∏è –ù–∞—á–∞–ª—Å—è —Ç–µ—Å—Ç–æ–≤—ã–π –±–æ–π!")
	
	show_message("‚öîÔ∏è –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –±–æ–π!")
	
	# ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤—ã–∑–æ–≤ start_battle
	# battle_manager.start_battle(main, members, enemies, location)
	print("   –í—ã–∑—ã–≤–∞–µ–º battle_manager.start_battle")
	battle_manager.start_battle(self, gang_members, [test_enemy], "–¢–ï–°–¢–û–í–ê–Ø –ê–†–ï–ù–ê")

# ===== –≠–ö–ò–ü–ò–†–û–í–ö–ê –ú–ê–®–ò–ù–´ (–±—É–¥–µ—Ç –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–∞ –≤ gang_manager) =====
func show_car_equipment_menu():
	"""–ú–µ–Ω—é –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –≤–æ–¥–∏—Ç–µ–ª—è"""
	var equip_menu = CanvasLayer.new()
	equip_menu.name = "CarEquipMenu"
	equip_menu.layer = 160
	add_child(equip_menu)
	
	var overlay = ColorRect.new()
	overlay.size = Vector2(720, 1280)
	overlay.color = Color(0, 0, 0, 0.8)
	overlay.mouse_filter = Control.MOUSE_FILTER_STOP
	equip_menu.add_child(overlay)
	
	var bg = ColorRect.new()
	bg.size = Vector2(700, 900)
	bg.position = Vector2(10, 190)
	bg.color = Color(0.05, 0.05, 0.15, 0.95)
	equip_menu.add_child(bg)
	
	var title = Label.new()
	title.text = "üöó –≠–ö–ò–ü–ò–†–û–í–ö–ê –ú–ê–®–ò–ù–´"
	title.position = Vector2(200, 210)
	title.add_theme_font_size_override("font_size", 28)
	title.add_theme_color_override("font_color", Color(0.3, 0.7, 1.0))
	equip_menu.add_child(title)
	
	var y_pos = 280
	
	# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–∞—à–∏–Ω–µ
	var owned_car_text = "–í–∞—à–∞ –º–∞—à–∏–Ω–∞: "
	if player_data.get("car"):
		var car_system = get_node_or_null("/root/CarSystem")
		if car_system and car_system.cars_db.has(player_data["car"]):
			owned_car_text += car_system.cars_db[player_data["car"]]["name"]
		else:
			owned_car_text += player_data["car"]
	else:
		owned_car_text += "–ù–µ—Ç (–∫—É–ø–∏—Ç–µ –≤ –ê–í–¢–û–°–ê–õ–û–ù–ï)"
	
	var owned_label = Label.new()
	owned_label.text = owned_car_text
	owned_label.position = Vector2(190, y_pos)
	owned_label.add_theme_font_size_override("font_size", 18)
	owned_label.add_theme_color_override("font_color", Color(0.8, 0.8, 1.0))
	equip_menu.add_child(owned_label)
	y_pos += 60
	
	# –°–ø–∏—Å–æ–∫ —á–ª–µ–Ω–æ–≤ –±–∞–Ω–¥—ã
	if player_data.get("car"):
		var info_label = Label.new()
		info_label.text = "–í—ã–±–µ—Ä–∏—Ç–µ –≤–æ–¥–∏—Ç–µ–ª—è –∏–∑ –±–∞–Ω–¥—ã:"
		info_label.position = Vector2(210, y_pos)
		info_label.add_theme_font_size_override("font_size", 16)
		info_label.add_theme_color_override("font_color", Color(1.0, 1.0, 0.3))
		equip_menu.add_child(info_label)
		y_pos += 50
		
		for i in range(gang_members.size()):
			var member = gang_members[i]
			var is_driver = (player_data.get("current_driver") == i)
			
			var member_btn = Button.new()
			member_btn.custom_minimum_size = Vector2(680, 60)
			member_btn.position = Vector2(20, y_pos)
			
			var member_text = member["name"]
			if is_driver:
				member_text += " ‚úÖ (–≤–æ–¥–∏—Ç–µ–ª—å)"
			
			member_btn.text = member_text
			member_btn.add_theme_font_size_override("font_size", 18)
			
			var style = StyleBoxFlat.new()
			if is_driver:
				style.bg_color = Color(0.2, 0.6, 0.2)
			else:
				style.bg_color = Color(0.3, 0.3, 0.4)
			member_btn.add_theme_stylebox_override("normal", style)
			
			var member_index = i
			member_btn.pressed.connect(func():
				set_driver(member_index, equip_menu)
			)
			equip_menu.add_child(member_btn)
			y_pos += 70
	else:
		var no_car_label = Label.new()
		no_car_label.text = "–£ –≤–∞—Å –Ω–µ—Ç –º–∞—à–∏–Ω—ã!\n–ö—É–ø–∏—Ç–µ –º–∞—à–∏–Ω—É –≤ –ê–í–¢–û–°–ê–õ–û–ù–ï"
		no_car_label.position = Vector2(220, y_pos + 100)
		no_car_label.add_theme_font_size_override("font_size", 20)
		no_car_label.add_theme_color_override("font_color", Color(1.0, 0.5, 0.5))
		equip_menu.add_child(no_car_label)
	
	# –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è
	var close_btn = Button.new()
	close_btn.custom_minimum_size = Vector2(680, 60)
	close_btn.position = Vector2(20, 1000)
	close_btn.text = "–ó–ê–ö–†–´–¢–¨"
	close_btn.add_theme_font_size_override("font_size", 20)
	
	var style_close = StyleBoxFlat.new()
	style_close.bg_color = Color(0.5, 0.1, 0.1)
	close_btn.add_theme_stylebox_override("normal", style_close)
	
	close_btn.pressed.connect(func():
		equip_menu.queue_free()
	)
	equip_menu.add_child(close_btn)

func set_driver(member_index: int, equip_menu: CanvasLayer):
	"""–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —á–ª–µ–Ω–∞ –±–∞–Ω–¥—ã –≤–æ–¥–∏—Ç–µ–ª–µ–º"""
	if not player_data.get("car"):
		show_message("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –º–∞—à–∏–Ω—ã!")
		return
	
	player_data["current_driver"] = member_index
	player_data["car_equipped"] = true
	gang_members[member_index]["equipment"]["car"] = player_data["car"]
	
	if log_system:
		log_system.add_event_log("üöó %s –Ω–∞–∑–Ω–∞—á–µ–Ω –≤–æ–¥–∏—Ç–µ–ª–µ–º" % gang_members[member_index]["name"])
	
	show_message("‚úÖ %s –Ω–∞–∑–Ω–∞—á–µ–Ω –≤–æ–¥–∏—Ç–µ–ª–µ–º!" % gang_members[member_index]["name"])
	
	# –û–±–Ω–æ–≤–ª—è–µ–º –º–µ–Ω—é
	equip_menu.queue_free()
	await get_tree().process_frame
	show_car_equipment_menu()

func get_save_data() -> Dictionary:
	return {
		"player_data": player_data,
		"gang_members": gang_members
	}
