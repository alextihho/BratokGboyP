# –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô quest_system.gd - –ü–û–õ–ù–û–°–¢–¨–Æ

extends Node

var available_quests = {}
var active_quests = []
var completed_quests = []

func _ready():
	initialize_quests()

func initialize_quests():
	"""–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–≤–µ—Å—Ç–æ–≤"""
	available_quests = {
		"first_fight": {
			"title": "–ü–µ—Ä–≤—ã–π –±–æ–π",
			"description": "–ü–æ–±–µ–¥–∏ –≤ –±–æ—é",
			"type": "combat",
			"target": 1,
			"reward": {"money": 100, "reputation": 10}
		},
		"earn_money": {
			"title": "–ó–∞—Ä–∞–±–æ—Ç–∞—Ç—å –¥–µ–Ω—å–≥–∏",
			"description": "–ù–∞–∫–æ–ø–∏ 500 —Ä—É–±–ª–µ–π",
			"type": "collect_money",
			"target": 500,
			"reward": {"money": 200, "reputation": 5}
		},
		"recruit_gang": {
			"title": "–°–æ–±—Ä–∞—Ç—å –±–∞–Ω–¥—É",
			"description": "–ù–∞–π–º–∏—Ç–µ 2 –±–æ–π—Ü–æ–≤",
			"type": "recruit",
			"target": 2,
			"reward": {"money": 300, "reputation": 15}
		},
		"capture_district": {
			"title": "–ó–∞—Ö–≤–∞—Ç–∏—Ç—å —Ä–∞–π–æ–Ω",
			"description": "–ó–∞—Ö–≤–∞—Ç–∏—Ç–µ –ª—é–±–æ–π —Ä–∞–π–æ–Ω",
			"type": "capture",
			"target": 1,
			"reward": {"money": 500, "reputation": 25}
		},
		"buy_weapon": {
			"title": "–í–æ–æ—Ä—É–∂–∏—Ç—å—Å—è",
			"description": "–ö—É–ø–∏—Ç–µ –ª—é–±–æ–µ –æ—Ä—É–∂–∏–µ",
			"type": "buy_item",
			"target": 1,
			"reward": {"money": 150, "reputation": 5}
		}
	}
	
	# –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –∫–≤–µ—Å—Ç—ã
	active_quests = [
		{"id": "first_fight", "progress": 0, "completed": false}
	]
	
	print("üìú –ö–≤–µ—Å—Ç—ã –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã: %d –¥–æ—Å—Ç—É–ø–Ω–æ" % available_quests.size())

func show_quests_menu(main_node):
	"""–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –º–µ–Ω—é –∫–≤–µ—Å—Ç–æ–≤"""
	var quest_menu = CanvasLayer.new()
	quest_menu.name = "QuestMenu"
	quest_menu.layer = 200
	main_node.add_child(quest_menu)
	
	# Overlay
	var overlay = ColorRect.new()
	overlay.size = Vector2(720, 1280)
	overlay.color = Color(0, 0, 0, 0.7)
	overlay.mouse_filter = Control.MOUSE_FILTER_STOP
	quest_menu.add_child(overlay)
	
	# –§–æ–Ω
	var bg = ColorRect.new()
	bg.size = Vector2(700, 1000)
	bg.position = Vector2(10, 140)
	bg.color = Color(0.05, 0.05, 0.05, 0.95)
	quest_menu.add_child(bg)
	
	# –ó–∞–≥–æ–ª–æ–≤–æ–∫
	var title = Label.new()
	title.text = "üìú –ö–í–ï–°–¢–´"
	title.position = Vector2(280, 160)
	title.add_theme_font_size_override("font_size", 28)
	title.add_theme_color_override("font_color", Color(1.0, 0.8, 0.2, 1.0))
	quest_menu.add_child(title)
	
	var y_pos = 220
	
	# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–≤–µ—Å—Ç–æ–≤
	if active_quests.size() == 0:
		var no_quests = Label.new()
		no_quests.text = "–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–≤–µ—Å—Ç–æ–≤"
		no_quests.position = Vector2(250, 400)
		no_quests.add_theme_font_size_override("font_size", 20)
		no_quests.add_theme_color_override("font_color", Color(0.7, 0.7, 0.7, 1.0))
		quest_menu.add_child(no_quests)
	else:
		# –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –∫–≤–µ—Å—Ç—ã
		for quest_data in active_quests:
			# ‚úÖ quest_data - —ç—Ç–æ Dictionary —Å –ø–æ–ª—è–º–∏: id, progress, completed
			var quest_id = quest_data.get("id", "")
			
			if not available_quests.has(quest_id):
				print("‚ö†Ô∏è –ö–≤–µ—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω: " + quest_id)
				continue
			
			# –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–≤–µ—Å—Ç–µ
			var quest_info = available_quests[quest_id]
			
			# –§–æ–Ω –∫–≤–µ—Å—Ç–∞
			var quest_bg = ColorRect.new()
			quest_bg.size = Vector2(680, 140)
			quest_bg.position = Vector2(20, y_pos)
			
			if quest_data.get("completed", false):
				quest_bg.color = Color(0.2, 0.3, 0.2, 1.0)  # –ó–µ–ª—ë–Ω—ã–π –¥–ª—è –∑–∞–≤–µ—Ä—à—ë–Ω–Ω—ã—Ö
			else:
				quest_bg.color = Color(0.15, 0.15, 0.2, 1.0)
			
			quest_menu.add_child(quest_bg)
			
			# –ù–∞–∑–≤–∞–Ω–∏–µ –∫–≤–µ—Å—Ç–∞
			var quest_title = Label.new()
			quest_title.text = "üìå " + quest_info.get("title", "–ö–≤–µ—Å—Ç")
			quest_title.position = Vector2(30, y_pos + 10)
			quest_title.add_theme_font_size_override("font_size", 20)
			quest_title.add_theme_color_override("font_color", Color(1.0, 1.0, 0.3, 1.0))
			quest_menu.add_child(quest_title)
			
			# –û–ø–∏—Å–∞–Ω–∏–µ
			var quest_desc = Label.new()
			quest_desc.text = quest_info.get("description", "")
			quest_desc.position = Vector2(30, y_pos + 40)
			quest_desc.add_theme_font_size_override("font_size", 16)
			quest_desc.add_theme_color_override("font_color", Color(0.8, 0.8, 0.8, 1.0))
			quest_menu.add_child(quest_desc)
			
			# –ü—Ä–æ–≥—Ä–µ—Å—Å
			var progress = quest_data.get("progress", 0)
			var target = quest_info.get("target", 1)
			var progress_text = Label.new()
			progress_text.text = "–ü—Ä–æ–≥—Ä–µ—Å—Å: %d/%d" % [progress, target]
			progress_text.position = Vector2(30, y_pos + 70)
			progress_text.add_theme_font_size_override("font_size", 16)
			
			if progress >= target:
				progress_text.add_theme_color_override("font_color", Color(0.3, 1.0, 0.3, 1.0))
			else:
				progress_text.add_theme_color_override("font_color", Color(1.0, 1.0, 0.3, 1.0))
			
			quest_menu.add_child(progress_text)
			
			# –ù–∞–≥—Ä–∞–¥–∞
			var reward = quest_info.get("reward", {})
			var reward_text = "–ù–∞–≥—Ä–∞–¥–∞: "
			if reward.has("money"):
				reward_text += str(reward["money"]) + "—Ä "
			if reward.has("reputation"):
				reward_text += "+" + str(reward["reputation"]) + " —Ä–µ–ø—É—Ç–∞—Ü–∏–∏"
			
			var reward_label = Label.new()
			reward_label.text = reward_text
			reward_label.position = Vector2(30, y_pos + 100)
			reward_label.add_theme_font_size_override("font_size", 14)
			reward_label.add_theme_color_override("font_color", Color(1.0, 0.8, 0.3, 1.0))
			quest_menu.add_child(reward_label)
			
			y_pos += 160
	
	# –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è
	var close_btn = Button.new()
	close_btn.custom_minimum_size = Vector2(680, 50)
	close_btn.position = Vector2(20, 1070)
	close_btn.text = "–ó–ê–ö–†–´–¢–¨"
	
	var style_close = StyleBoxFlat.new()
	style_close.bg_color = Color(0.5, 0.1, 0.1, 1.0)
	close_btn.add_theme_stylebox_override("normal", style_close)
	
	close_btn.add_theme_font_size_override("font_size", 20)
	close_btn.pressed.connect(func(): quest_menu.queue_free())
	
	quest_menu.add_child(close_btn)

func update_quest_progress(quest_id: String, amount: int = 1):
	"""–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –∫–≤–µ—Å—Ç–∞"""
	for quest_data in active_quests:
		if quest_data.get("id", "") == quest_id:
			if quest_data.get("completed", false):
				return  # –£–∂–µ –∑–∞–≤–µ—Ä—à—ë–Ω
			
			quest_data["progress"] = quest_data.get("progress", 0) + amount
			
			if available_quests.has(quest_id):
				var target = available_quests[quest_id].get("target", 1)
				
				if quest_data["progress"] >= target:
					quest_data["completed"] = true
					print("‚úÖ –ö–≤–µ—Å—Ç –∑–∞–≤–µ—Ä—à—ë–Ω: " + quest_id)
					# –≠–º–∏—Ç–∏—Ä—É–µ–º —Å–∏–≥–Ω–∞–ª –¥–ª—è –Ω–∞–≥—Ä–∞–¥—ã
					emit_signal("quest_completed", quest_id)
			
			break

func check_quest_conditions(main_node):
	"""–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π –∫–≤–µ—Å—Ç–æ–≤"""
	for quest_data in active_quests:
		if quest_data.get("completed", false):
			continue
		
		var quest_id = quest_data.get("id", "")
		if not available_quests.has(quest_id):
			continue
		
		var quest_info = available_quests[quest_id]
		var quest_type = quest_info.get("type", "")
		
		match quest_type:
			"collect_money":
				var current_money = main_node.player_data.get("balance", 0)
				var target = quest_info.get("target", 1)
				if current_money >= target:
					quest_data["progress"] = target
					quest_data["completed"] = true
					emit_signal("quest_completed", quest_id)
			
			"recruit":
				var gang_size = main_node.gang_members.size() - 1  # –ú–∏–Ω—É—Å –≥–ª–∞–≤–Ω—ã–π
				var target = quest_info.get("target", 1)
				quest_data["progress"] = gang_size
				if gang_size >= target:
					quest_data["completed"] = true
					emit_signal("quest_completed", quest_id)

# –°–∏–≥–Ω–∞–ª –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏
signal quest_completed(quest_id: String)

func get_active_quests() -> Array:
	return active_quests

func get_completed_quests() -> Array:
	return completed_quests

func add_quest(quest_id: String):
	"""–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∫–≤–µ—Å—Ç–∞"""
	if not available_quests.has(quest_id):
		print("‚ö†Ô∏è –ö–≤–µ—Å—Ç –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: " + quest_id)
		return
	
	# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∫–≤–µ—Å—Ç –µ—â—ë –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω
	for quest_data in active_quests:
		if quest_data.get("id", "") == quest_id:
			print("‚ö†Ô∏è –ö–≤–µ—Å—Ç —É–∂–µ –∞–∫—Ç–∏–≤–µ–Ω: " + quest_id)
			return
	
	active_quests.append({
		"id": quest_id,
		"progress": 0,
		"completed": false
	})
	
	print("üìú –ö–≤–µ—Å—Ç –¥–æ–±–∞–≤–ª–µ–Ω: " + quest_id)
func check_quest_progress(quest_type: String, value = null):
	"""
	–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å –∫–≤–µ—Å—Ç–æ–≤
	
	–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
	- quest_type: –¢–∏–ø —Å–æ–±—ã—Ç–∏—è ("sell_item", "buy_item", "combat", "capture", etc.)
	- value: –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
	"""
	for quest_data in active_quests:
		if quest_data.get("completed", false):
			continue
		
		var quest_id = quest_data.get("id", "")
		if not available_quests.has(quest_id):
			continue
		
		var quest_info = available_quests[quest_id]
		var q_type = quest_info.get("type", "")
		
		# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ç–∏–ø–∞
		if q_type == quest_type:
			# –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
			quest_data["progress"] = quest_data.get("progress", 0) + 1
			
			var target = quest_info.get("target", 1)
			
			print("üìú –ö–≤–µ—Å—Ç '%s': %d/%d" % [
				quest_info.get("title", ""),
				quest_data["progress"],
				target
			])
			
			# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ
			if quest_data["progress"] >= target:
				quest_data["completed"] = true
				print("‚úÖ –ö–≤–µ—Å—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω: %s" % quest_info.get("title", ""))
				emit_signal("quest_completed", quest_id)

# ===== –ï–°–õ–ò –°–ò–ì–ù–ê–õ–ê –ù–ï–¢ - –î–û–ë–ê–í–¨ –í –ù–ê–ß–ê–õ–û –§–ê–ô–õ–ê =====
# signal quest_completed(quest_id: String)
